%тестовый пример
% A = [ 2 -1;
%      -1 2]

n = 10;
disp('Симметричная, положительно определённая матрица А: ');
% A = generate_matrix(n)

disp('Собственные числа матрицы (точное значение с помощью eig): ');
lambda_all = eig(A)

eps = input('Введите погрешность вычислений ');
max_it = input('Введите максимальное число итераций ');

%----- ПОИСК МАКСИМАЛЬНОГО СОБСТВЕННОГО ЧИСЛА -----%

% Y = [0.1, 0.1, 0.1, 0.1, 0.1]'; %начальное приближение
Y = 0.1.*eye(n, 1);
% Y = [1, 0]'; %- начальное приближение для тестового примера
[lambda_max, X_max, k_max, flag_max] = sp_max(A, Y, eps, max_it);
if flag_max == 0 %решение не достигнуто
    disp('Решение не достигнуто. Возможно не хватило максимального количества итераций или неверно задана погрешность');
end
if flag_max == 1 %решение достигнуто
    disp('Максимальное собственное число: ');
    lambda_max
    disp('Соответствующий нормированный собственный вектор: ');
    X_max
    disp('Число итераций: ');
    k_max
end
[V, D] = eig(A)
%--------------------------------------------------%


%----- ПОИСК МИНИМАЛЬНОГО СОБСТВЕННОГО ЧИСЛА -----%

% Y_min = [1, 1, 1, 1, 1]'; %начальное приближение
Y_min = eye(n, 1);
% Y = [1, 0]'; %- начальное приближение для тестового примера
[lambda_min, X_min, k_min, flag_min] = sp_min(A, Y_min, eps, max_it);
if flag_min == 0 %решение не достигнуто
    disp('Решение не достигнуто. Возможно не хватило максимального количества итераций или неверно задана погрешность');
end
if flag_min == 1 %решение достигнуто
    disp('Минимальное собственное число: ');
    lambda_min
    disp('Соответствующий нормированный собственный вектор: ');
    X_min
    disp('Число итераций: ');
    k_min
end
% [V, D] = eig(A)
%--------------------------------------------------%





